<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="example.infrastructure.query.sharedgroup.SharedGroupDetailMapper">
    <select id="findAllByAccountId" resultMap="SharedGroupDetailResultEntityResultMap">
        SELECT
            members_with_profiles.shared_group_id AS shared_group_id,
            members_with_profiles.account_id AS member_account_id,
            members_with_profiles.username AS member_username,
            members_with_profiles.profile_image_url_endpoint AS member_profile_image_url_endpoint,
            members_with_profiles.profile_image_url_path AS member_profile_image_url_path,
            invitees_with_profiles.account_id AS invitee_account_id,
            invitees_with_profiles.username AS invitee_username,
            invitees_with_profiles.profile_image_url_endpoint AS invitee_profile_image_url_endpoint,
            invitees_with_profiles.profile_image_url_path AS invitee_profile_image_url_path
        FROM
            (SELECT * FROM members LEFT OUTER JOIN profiles ON members.member = profiles.account_id) AS members_with_profiles
            LEFT OUTER JOIN
                (SELECT * FROM invitees LEFT OUTER JOIN profiles ON invitees.invitee = profiles.account_id) AS invitees_with_profiles
                ON members_with_profiles.shared_group_id = invitees_with_profiles.shared_group_id
        WHERE
            members_with_profiles.shared_group_id IN(
             SELECT shared_group_id
             FROM members
             WHERE members.member = #{accountId}
            )
            OR
            invitees_with_profiles.shared_group_id IN(
             SELECT DISTINCT shared_group_id
             FROM invitees
             WHERE invitees.invitee = #{accountId}
            );
    </select>

    <select id="findAllParticipatingSharedGroupMembersByAccountId" resultMap="UserResultMap">
        SELECT
            profiles.account_id AS account_id,
            profiles.username AS username,
            profiles.profile_image_url_endpoint AS profile_image_url_endpoint,
            profiles.profile_image_url_path AS profile_image_url_path
        FROM
            members LEFT OUTER JOIN profiles ON members.member = profiles.account_id
        WHERE
            members.shared_group_id IN(
             SELECT shared_group_id
             FROM members
             WHERE members.member = #{accountId}
            );
    </select>

    <resultMap id="SharedGroupDetailResultEntityResultMap" type="example.infrastructure.query.sharedgroup.SharedGroupDetailResultEntity">
        <constructor>
            <idArg column="shared_group_id" javaType="SharedGroupId" resultMap="SharedGroupIdResultMap"/>
        </constructor>
        <id column="shared_group_id"/>
        <collection column="{member_account_id, member_username, member_profile_image_url_endpoint, member_profile_image_url_path}"
                    property="members" ofType="example.application.query.shared.type.User" resultMap="UserResultMap" columnPrefix="member_"/>
        <collection column="{invitee_account_id, invitee_username, invitee_profile_image_url_endpoint, invitee_profile_image_url_path}"
                    property="invitees" ofType="example.application.query.shared.type.User" resultMap="UserResultMap" columnPrefix="invitee_"/>
    </resultMap>
    <resultMap id="SharedGroupIdResultMap" type="SharedGroupId">
        <constructor>
            <idArg column="shared_group_id" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="UserResultMap" type="example.application.query.shared.type.User">
        <constructor>
            <idArg column="account_id" javaType="AccountId" resultMap="AccountIdResultMap"/>
            <arg column="username" javaType="Username" resultMap="UsernameResultMap"/>
            <arg column="{profile_image_url_endpoint, profile_image_url_path}" javaType="ProfileImageURL" resultMap="ProfileImageURLResultMap"/>
        </constructor>
    </resultMap>
    <resultMap id="AccountIdResultMap" type="AccountId">
        <constructor>
            <idArg column="account_id" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="UsernameResultMap" type="Username">
        <constructor>
            <idArg column="username" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="ProfileImageURLResultMap" type="ProfileImageURL">
        <constructor>
            <idArg column="profile_image_url_endpoint" javaType="String"/>
            <idArg column="profile_image_url_path" javaType="String"/>
        </constructor>
    </resultMap>
</mapper>