<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="example.infrastructure.repository.medicine.MedicineMapper">
    <select id="findOneByMedicineId" resultMap="MedicineResultEntityResultMap">
        SELECT
            <include refid="AllColumns"/>
        FROM
            <include refid="AllTables"/>
        WHERE
            medicine_id = #{medicineId};
    </select>

    <select id="findAllByAccountId" resultMap="MedicineResultEntityResultMap">
        SELECT
            <include refid="AllColumns"/>
        FROM
            <include refid="AllTables"/>
        WHERE
            account_id = #{accountId};
    </select>

    <select id="findAllByAccountIds" resultMap="MedicineResultEntityResultMap">
        SELECT
            <include refid="AllColumns"/>
        FROM
            <include refid="AllTables"/>
        WHERE
            <foreach collection="accountIds" item="accountId" open="account_id IN (" separator="," close=")">
                  #{accountId}
            </foreach>
    </select>

    <select id="findAllBySharedGroupId" resultMap="MedicineResultEntityResultMap">
        SELECT
            <include refid="AllColumns"/>
        FROM
            <include refid="AllTables"/>
        WHERE
            shared_group_id = #{sharedGroupId};
    </select>

    <insert id="upsertOneMedicine">
        INSERT INTO medicines(
            medicine_id,
            account_id,
            shared_group_id,
            medicine_name,
            quantity,
            dose_unit,
            times_per_day,
            precautions,
            medicine_image_url_endpoint,
            medicine_image_url_path,
            is_public,
            registered_at
        )VALUES(
            #{medicineId},
            #{accountId, jdbcType=VARCHAR},
            #{sharedGroupId, jdbcType=VARCHAR},
            #{medicineName},
            #{quantity},
            #{doseUnit},
            #{timesPerDay},
            #{precautions},
            #{medicineImageURLEndpoint, jdbcType=VARCHAR},
            #{medicineImageURLPath, jdbcType=VARCHAR},
            #{isPublic},
            #{registeredAt}
        )ON DUPLICATE KEY UPDATE
            account_id = #{accountId, jdbcType=VARCHAR},
            shared_group_id = #{sharedGroupId, jdbcType=VARCHAR},
            medicine_name = #{medicineName},
            quantity = #{quantity},
            dose_unit = #{doseUnit},
            times_per_day = #{timesPerDay},
            precautions = #{precautions},
            medicine_image_url_endpoint = #{medicineImageURLEndpoint, jdbcType=VARCHAR},
            medicine_image_url_path = #{medicineImageURLPath, jdbcType=VARCHAR},
            is_public = #{isPublic};
    </insert>

    <insert id="insertOneInventory">
        INSERT INTO inventories(
            medicine_id,
            remaining_quantity,
            quantity_per_package,
            started_on,
            expiration_on,
            unused_package
        )VALUES(
            #{medicineId},
            #{remainingQuantity},
            #{quantityPerPackage},
            #{startedOn, jdbcType=DATE},
            #{expirationOn, jdbcType=DATE},
            #{unusedPackage}
        );
    </insert>

    <insert id="insertAllTimingOptions">
        INSERT INTO timing_options(
            medicine_id,
            ordering,
            timing_option
        )VALUES
            <foreach collection="timingOptions" item="item" separator=",">
                (#{medicineId}, #{item.ordering}, #{item.value})
            </foreach>
        ;
    </insert>

    <insert id="insertAllEffects">
        INSERT INTO effects(
            medicine_id,
            ordering,
            effect
        )VALUES
            <foreach collection="effects" item="item" separator=",">
                (#{medicineId}, #{item.ordering}, #{item.value})
            </foreach>
        ;
    </insert>

    <delete id="deleteOneMedicineByMedicineId">
        DELETE FROM medicines
        WHERE medicine_id = #{medicineId};
    </delete>

    <delete id="deleteAllMedicineByAccountId">
        DELETE FROM medicines
        WHERE account_id = #{accountId};
    </delete>

    <delete id="deleteAllMedicinesBySharedGroupId">
        DELETE FROM medicines
        WHERE shared_group_id = #{sharedGroupId};
    </delete>

    <delete id="deleteOneInventoryByMedicineId">
        DELETE FROM inventories
        WHERE medicine_id = #{medicineId};
    </delete>

    <delete id="deleteAllInventoriesByMedicineIds">
        DELETE FROM inventories
        WHERE
        <foreach collection="medicineIds" item="medicineId" open="medicine_id IN (" separator="," close=")">
              #{medicineId}
        </foreach>
    </delete>

    <delete id="deleteAllTimingOptionsByMedicineId">
        DELETE FROM timing_options
        WHERE medicine_id = #{medicineId};
    </delete>

    <delete id="deleteAllTimingOptionsByMedicineIds">
        DELETE FROM timing_options
        WHERE
        <foreach collection="medicineIds" item="medicineId" open="medicine_id IN (" separator="," close=")">
              #{medicineId}
        </foreach>
    </delete>

    <delete id="deleteAllEffectsByMedicineId">
        DELETE FROM effects
        WHERE medicine_id = #{medicineId};
    </delete>

    <delete id="deleteAllEffectsByMedicineIds">
        DELETE FROM effects
        WHERE
        <foreach collection="medicineIds" item="medicineId" open="medicine_id IN (" separator="," close=")">
              #{medicineId}
        </foreach>
    </delete>


    <sql id="AllColumns">
        medicines.medicine_id AS medicine_id,
        medicines.account_id AS account_id,
        medicines.shared_group_id AS shared_group_id,
        medicines.medicine_name AS medicine_name,
        medicines.quantity AS quantity,
        medicines.dose_unit AS dose_unit,
        medicines.times_per_day AS times_per_day,
        medicines.precautions AS precautions,
        medicines.medicine_image_url_endpoint AS medicine_image_url_endpoint,
        medicines.medicine_image_url_path AS medicine_image_url_path,
        medicines.is_public AS is_public,
        medicines.registered_at AS registered_at,
        inventories.medicine_id AS medicine_id,
        inventories.remaining_quantity AS remaining_quantity,
        inventories.quantity_per_package AS quantity_per_package,
        inventories.started_on AS started_on,
        inventories.expiration_on AS expiration_on,
        inventories.unused_package AS unused_package,
        effects.ordering AS effect_ordering,
        effects.effect AS effect,
        timing_options.ordering AS timing_option_ordering,
        timing_options.timing_option AS timing_option
    </sql>

    <sql id="AllTables">
        medicines
        LEFT OUTER JOIN inventories USING(medicine_id)
        LEFT OUTER JOIN effects USING(medicine_id)
        LEFT OUTER JOIN timing_options USING(medicine_id)
    </sql>

    <resultMap id="MedicineResultEntityResultMap" type="example.infrastructure.repository.medicine.MedicineResultEntity">
        <constructor>
            <idArg column="medicine_id" javaType="MedicineId" resultMap="MedicineIdResultMap"/>
            <arg column="{account_id, shared_group_id}" javaType="MedicineOwner" resultMap="MedicineOwnerResultMap"/>
            <arg column="medicine_name" javaType="MedicineName" resultMap="MedicineNameResultMap"/>
            <arg column="quantity" javaType="Dose" resultMap="DoseResultMap"/>
            <arg column="dose_unit" javaType="String"/>
            <arg column="times_per_day" javaType="_int"/>
            <arg column="precautions" javaType="Note" resultMap="NoteResultMap"/>
            <arg column="{medicine_image_url_endpoint, medicine_image_url_path}" javaType="MedicineImageURL" resultMap="MedicineImageURLResultMap"/>
            <arg column="is_public" javaType="_boolean"/>
            <arg column="{medicine_id, remaining_quantity, quantity_per_package, started_on, expiration_on, unused_package}"
                 javaType="Inventory" resultMap="InventoryResultMap"/>
            <arg column="registered_at" javaType="java.time.LocalDateTime"/>
        </constructor>
        <id column="medicine_id"/>
        <association column="{timing_option_ordering, timing_option}" property="timingOptions"
                     javaType="example.infrastructure.repository.shared.OrderedEntity" resultMap="TimingOptionOrderedEntityResultMap"/>
        <association column="{effect_ordering, effect}" property="effects"
                     javaType="example.infrastructure.repository.shared.OrderedEntity" resultMap="EffectOrderedEntityResultMap"/>
    </resultMap>
    <resultMap id="MedicineIdResultMap" type="MedicineId">
        <constructor>
            <idArg column="medicine_id" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="MedicineNameResultMap" type="MedicineName">
        <constructor>
            <idArg column="medicine_name" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="MedicineOwnerResultMap" type="MedicineOwner">
        <constructor>
            <arg column="account_id" javaType="AccountId" resultMap="AccountIdResultMap"/>
            <arg column="shared_group_id" javaType="SharedGroupId" resultMap="SharedGroupIdResultMap"/>
        </constructor>
    </resultMap>
    <resultMap id="AccountIdResultMap" type="AccountId">
        <constructor>
            <idArg column="account_id" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="SharedGroupIdResultMap" type="SharedGroupId">
        <constructor>
            <idArg column="shared_group_id" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="DoseResultMap" type="Dose">
        <constructor>
            <idArg column="quantity" javaType="_double"/>
        </constructor>
    </resultMap>
    <resultMap id="NoteResultMap" type="Note">
        <constructor>
            <idArg column="precautions" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="MedicineImageURLResultMap" type="MedicineImageURL">
        <constructor>
            <idArg column="medicine_image_url_endpoint" javaType="String"/>
            <idArg column="medicine_image_url_path" javaType="String"/>
        </constructor>
    </resultMap>
    <resultMap id="InventoryResultMap" type="Inventory">
        <constructor>
            <idArg column="remaining_quantity" javaType="_double"/>
            <idArg column="quantity_per_package" javaType="_double"/>
            <idArg column="started_on" javaType="java.time.LocalDate"/>
            <idArg column="expiration_on" javaType="java.time.LocalDate"/>
            <idArg column="unused_package" javaType="_int"/>
        </constructor>
    </resultMap>
    <resultMap id="TimingOptionOrderedEntityResultMap" type="example.infrastructure.repository.shared.OrderedEntity">
        <constructor>
            <idArg column="timing_option_ordering" javaType="_int"/>
            <arg column="timing_option" resultMap="TimingResultMap"/>
        </constructor>
    </resultMap>
    <resultMap id="EffectOrderedEntityResultMap" type="example.infrastructure.repository.shared.OrderedEntity">
        <constructor>
            <idArg column="effect_ordering" javaType="_int"/>
            <arg column="effect" resultMap="EffectResultMap"/>
        </constructor>
    </resultMap>
    <resultMap id="TimingResultMap" type="Timing">
        <constructor>
            <idArg column="timing_option" javaType="Timing"/>
        </constructor>
    </resultMap>
    <resultMap id="EffectResultMap" type="String">
        <constructor>
            <idArg column="effect" javaType="String"/>
        </constructor>
    </resultMap>
</mapper>