# 開発環境用

spring:
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${devEnv.servers.mysql.host}:${devEnv.servers.mysql.port}/medicine_diary
    username: root
    password: root
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: medicine-diary
            clientSecret: I3kFhXGHEKZXU6us66PpKb0ENOX8oNdA
            provider: github
            scope: openid,profile,email  # 実際には user
            authorizationGrantType: authorization_code
            redirectUri: http://${devEnv.servers.app.host}:${devEnv.servers.app.port}/login/oauth2/code/github
          line:
            clientId: medicine-diary
            clientSecret: qBHk3VCgCevdPcqJO53tMOgJTnYhIydh
            provider: line
            scope: openid # 実際には profile
            authorizationGrantType: authorization_code
            redirectUri: http://${devEnv.servers.app.host}:${devEnv.servers.app.port}/login/oauth2/code/line
          yahoo:
            clientId: medicine-diary
            clientSecret: MhHrygJIsxdrIsBPCrIHbXXzwa25IUt4
            provider: yahoo
            scope: openid
            authorizationGrantType: authorization_code
            redirectUri: http://${devEnv.servers.app.host}:${devEnv.servers.app.port}/login/oauth2/code/yahoo
        provider:
          github:
            authorizationUri: http://${devEnv.servers.keycloak.authorizationUri.hostPort}/realms/mock-github/protocol/openid-connect/auth
            tokenUri: http://${devEnv.servers.keycloak.tokenUri.hostPort}/realms/mock-github/protocol/openid-connect/token
            jwkSetUri: http://${devEnv.servers.keycloak.jwkSetUri.hostPort}/realms/mock-github/protocol/openid-connect/certs
            # 以下はデフォルト値を変更するために必要
            userInfoUri: http://${devEnv.servers.keycloak.userInfoUri.hostPort}/realms/mock-github/protocol/openid-connect/userinfo
            userNameAttribute: sub
          line:
            authorizationUri: http://${devEnv.servers.keycloak.authorizationUri.hostPort}/realms/mock-line/protocol/openid-connect/auth
            tokenUri: http://${devEnv.servers.keycloak.tokenUri.hostPort}/realms/mock-line/protocol/openid-connect/token
            jwkSetUri: http://${devEnv.servers.keycloak.jwkSetUri.hostPort}/realms/mock-line/protocol/openid-connect/certs
          yahoo:
            authorizationUri: http://${devEnv.servers.keycloak.authorizationUri.hostPort}/realms/mock-yahoo/protocol/openid-connect/auth
            tokenUri: http://${devEnv.servers.keycloak.tokenUri.hostPort}/realms/mock-yahoo/protocol/openid-connect/token
            jwkSetUri: http://${devEnv.servers.keycloak.jwkSetUri.hostPort}/realms/mock-yahoo/protocol/openid-connect/certs
  mail:
    host: ${devEnv.servers.mailhog.host}
    port: ${devEnv.servers.mailhog.port}
    properties:
      mail:
        smtp:
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000


# Actuatorエンドポイントへのアクセス制御
management:
  endpoint:
    env:
      showValues: always
    health:
      showDetails: always
  endpoints:
    web:
      basePath: /actuator
      exposure:
        include: '*'
  metrics:
    web:
      server:
        requestsMetricName: http.server.requests
    distribution:
      percentiles:
        http.server.requests: 0.5, 0.99

logging:
  level:
    root: INFO
    org.springframework: WARN
    org.springframework.web: DEBUG
    sql: DEBUG
    example.configuration.logging.TraceLoggingInterceptor: TRACE



application:
  name: お薬日記
  endpoint:
    web: http://${devEnv.servers.app.host}:${devEnv.servers.app.port}
    image: http://${devEnv.servers.minio.host}:${devEnv.servers.minio.port}/medicine-diary
  emailAddress:
    contact:
      sender: application@example.co.jp
      handler: contact-handler@example.co.jp
  admin:
    username: admin
    password: password

infrastructure:
  storage:
    minio:
      user: root
      password: root-password
      endpoint: http://${devEnv.servers.minio.host}:${devEnv.servers.minio.port}
      bucketName: progress-management
